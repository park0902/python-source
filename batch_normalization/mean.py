import numpy as np

Epoch1_cost = [1.246912, 1.25774764, 1.14651276, 1.18326217, 1.1994398]
Epoch2_cost = [0.63795513, 0.62403089, 0.55772469, 0.6031399, 0.62166997]
Epoch3_cost = [0.43417069, 0.43588469, 0.39420148, 0.42305387, 0.43092245]
Epoch4_cost = [0.31889224, 0.31382058, 0.30106482, 0.29543865, 0.32417801]
Epoch5_cost = [0.24426917, 0.23671947, 0.21702002, 0.20632685, 0.23404752]
Epoch6_cost = [0.19188245, 0.1960393, 0.17749285, 0.17647078, 0.18382987]
Epoch7_cost = [0.14433524, 0.13940845, 0.13451943, 0.13317863, 0.13316161]
Epoch8_cost = [0.10818644, 0.11436398, 0.10192822, 0.09773193, 0.09898088]
Epoch9_cost = [0.09638046, 0.08568301, 0.08621011, 0.0936926, 0.08865109]
Epoch10_cost = [0.07514204, 0.0787323,  0.08087532,  0.07221016, 0.08083238]
Epoch11_cost = [0.07273726, 0.07216718,  0.07549828,  0.06728227, 0.07756251]
Epoch12_cost = [0.05758547, 0.0752269 ,  0.05214181,  0.06405707, 0.0549687]
Epoch13_cost = [0.06161219, 0.06028595,  0.04958855,  0.06165413, 0.054827]
Epoch14_cost = [0.04559184, 0.05299979,  0.03914034,  0.04601834, 0.04827035]
Epoch15_cost = [0.0488342 , 0.04457522,  0.05627269,  0.04885309, 0.04537937]
Epoch16_cost = [0.03306598, 0.03981627,  0.0380421 ,  0.03665963, 0.0375944]
Epoch17_cost = [0.04194473, 0.03720227,  0.04282436,  0.03848807, 0.04812907]
Epoch18_cost = [0.03325556, 0.03616369,  0.03015636,  0.02947081, 0.03730404]
Epoch19_cost = [0.03598071, 0.04318646,  0.03640381,  0.03439542, 0.02879308]
Epoch20_cost = [0.03141016, 0.03464479,  0.03806613,  0.03787983, 0.03842765]
Epoch21_cost = [0.03356459, 0.02975484,  0.02458417,  0.02812244, 0.01929467]
Epoch22_cost = [0.0336142 , 0.0377885 ,  0.02812895,  0.03654802, 0.03207104]
Epoch23_cost = [0.02501424, 0.02988359,  0.03019901,  0.02817387, 0.0303448]
Epoch24_cost = [0.02320795, 0.03343092,  0.02857854,  0.02652269, 0.02676783]
Epoch25_cost = [0.03187317, 0.03299955,  0.02184499,  0.02993073, 0.02622096]
Epoch26_cost = [0.02186448, 0.02182101,  0.02472706,  0.02220164, 0.02774181]
Epoch27_cost = [0.02888767, 0.02500424,  0.02843903,  0.03090027, 0.02225767]
Epoch28_cost = [0.02613471, 0.02965638,  0.02496511,  0.02026782, 0.02857023]
Epoch29_cost = [0.01932069, 0.02085029,  0.02113118,  0.02519785, 0.0248324]
Epoch30_cost = [0.02307643, 0.01953287,  0.02933712,  0.02367329, 0.02135645]
Epoch31_cost = [0.02627942, 0.02148263,  0.02709328,  0.02136512, 0.0224896]
Epoch32_cost = [0.02248928, 0.02142815,  0.02035038,  0.01970109, 0.01795937]
Epoch33_cost = [0.01992591, 0.01947441,  0.01806548,  0.0242689 , 0.02399532]
Epoch34_cost = [0.02018868, 0.0213763 ,  0.01899336,  0.02449727, 0.02027373]
Epoch35_cost = [0.02223335, 0.01951425,  0.01626246,  0.01748377, 0.01751569]
Epoch36_cost = [0.02237306, 0.0165717 ,  0.01998629,  0.02473124, 0.01370071]
Epoch37_cost = [0.01564359, 0.01835206,  0.016052  ,  0.01874176, 0.0248964]
Epoch38_cost = [0.01757578, 0.01451408,  0.01480558,  0.02057407, 0.01747594]
Epoch39_cost = [0.01553086, 0.01556894,  0.01823695,  0.0157227 , 0.01371865]
Epoch40_cost = [0.0240196 , 0.0124991 ,  0.01837335,  0.01512897, 0.01609378]
Epoch41_cost = [0.01695979, 0.01611907,  0.01566193,  0.01351835, 0.01851706]
Epoch42_cost = [0.01587171, 0.01494324,  0.01568549,  0.01775901, 0.01594795]
Epoch43_cost = [0.0143956 , 0.02125732,  0.01713936,  0.01190681, 0.01808931]
Epoch44_cost = [0.0148128 , 0.02131118,  0.02284291,  0.02425399, 0.01731125]
Epoch45_cost = [0.01311544, 0.02727793,  0.02033697,  0.02061006, 0.01842237]
Epoch46_cost = [0.01809361, 0.01016245,  0.01247418,  0.01404771, 0.01341905]
Epoch47_cost = [0.01465217, 0.01545493,  0.02111351,  0.01161845, 0.01348925]
Epoch48_cost = [0.01383164, 0.00913356,  0.01119664,  0.01096351, 0.01218574]
Epoch49_cost = [0.01218438, 0.00926885,  0.02101124,  0.01209634, 0.01635569]
Epoch50_cost = [0.01167309, 0.01630518,  0.01169555,  0.01528979, 0.01187089]

early_stopping_list = []
mean_list = []
diff = 0

# 전 vs 후 -> 1개 이상 튀었을 때의 index 값의 차이를 mean_list에 담는다.
# for i in range(1,51,1):
#     early_stopping_list.append(eval('Epoch'+str(i)+'_cost'))
#
#     if len(early_stopping_list) >= 2:
#         temp = np.array(early_stopping_list)
#         last_epoch = i
#         diff = np.sum(temp[0] < temp[1])
#         if diff >= 1:
#             print(i-1, temp[0] ,i, temp[1])
#             for i in range(5):
#                 if (temp[0] < temp[1])[i]:
#                     mean_list.append(temp[0][i]-temp[1][i])
#
#         early_stopping_list.pop(0)
check = 0
for i in range(1, 51, 1):
    early_stopping_list.append(eval('Epoch' + str(i) + '_cost'))
    if len(early_stopping_list) >= 2:
        temp = np.array(early_stopping_list)
        last_epoch = i
        diff = np.sum(temp[0] < temp[1])
        for i in range(5):
            if temp[0][i] - temp[1][i] >= -0.01:
                check += 1
        if diff > 2 and check >= 2:
            print(i - 1, temp[0], i, temp[1])
            break
        early_stopping_list.pop(0)
# max(mean_list)
early_stopping_list.pop()
early_stopping_list



sum=0
# print(mean_list)
# print(np.mean(mean_list))
# for i in mean_list:
#     sum += i
# test = sum/len(mean_list)
# test
#
# test_list = []
# for idx,i in enumerate(mean_list):
#     test_list.append(test -i)
#     print(test-i,idx)
# print(max(test_list),min(test_list))
# test_list.pop(3)
# test_list.pop(61)
#
# sum1=0
# for i in test_list:
#     sum1 += i
# test2 = sum1/len(test_list)
#
# for i in mean_list:
#     print(test2-i)